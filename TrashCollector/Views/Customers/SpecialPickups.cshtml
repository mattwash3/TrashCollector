@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "SpecialPickups";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.AddressId)
    @Html.HiddenFor(model => model.FirstName)
    @Html.HiddenFor(model => model.LastName)
    @Html.HiddenFor(model => model.ApplicationId)
    @Html.HiddenFor(model => model.Address.Id);
    @Html.HiddenFor(model => model.Address.AddressNumber);
    @Html.HiddenFor(model => model.Address.Street);
    @Html.HiddenFor(model => model.Address.City);
    @Html.HiddenFor(model => model.Address.State);
    @Html.HiddenFor(model => model.Address.Zipcode);
    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.WeeklyPickUp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WeeklyPickUp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WeeklyPickUp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OneTimePickUp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OneTimePickUp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OneTimePickUp, "", new { @class = "text-danger" })
                @*@Html.TextBoxFor(m => m.OneTimePickUp, "{0:dd/MM/yyyy}")*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SuspendPickUpStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuspendPickUpStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SuspendPickUpStart, "", new { @class = "text-danger" })
                @*@Html.TextBoxFor(m => m.SuspendPickUpStart, "{0:dd/MM/yyyy}")*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SuspendPickUpEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuspendPickUpEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SuspendPickUpEnd, "", new { @class = "text-danger" })
                @*@Html.TextBoxFor(m => m.SuspendPickUpEnd, "{0:dd/MM/yyyy}")*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
